//Задача №1
//
// ДЗ №36 Климов (действия со строками2)
//
//Дополните свою библиотеку функций реализациями нижеследующих функций:
//■int mystrcmp(const char* str1, const char* str2); —
//     функция сравнивает две строки, и, если строки равны
//     возвращает 0, если первая строка больше второй, то
//     возвращает 1, иначе –1.
//■int StringToNumber(char* str); — функция конвертирует строку в число и возвращает это число.
//■char * NumberToString(int number); — функция конвертирует число в строку и возвращает указатель на
//     эту строку.
//■char * Uppercase(char* str1); — функция преобразует
//     строку в верхний регистр.
//■char* Lowercase(char* str1); — функция преобразует
//     строку в нижний регистр.
//■char* mystrrev(char* str); — функция реверсирует
//     строку и возвращает указатель на новую строку.


#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <cctype>
#include <time.h>
#include <Windows.h>
#include <iomanip>
#include <cstring>
#include <string>


    using namespace std;

    int mystrcmp(const char* str1, const char* str2)//функция сравнивает две строки и, если строки равны возвращает 0, 
        //если первая строка больше второй, то возвращает 1, иначе - 1.
    {
        string str1_1 = string(str1);
        string str2_2 = string(str2);

        if (str1_1 == str2_2)
        {
            return 0;
        }
        else if (strlen(str1) > strlen(str2))//Функция strlen() возвращает длину строки, оканчивающейся нулевым символом, 
            //на которую указывает str.При определении длины строки нулевой символ не учитывается.
        {
            return 1;
        }
        else {
            return -1;
        }
    }
    int StringToNumber(char* str)//функция конвертирует строку в число и возвращает это число
    {
        int result;

        for (int i = 0; i < strlen(str); i++)//Функция strlen() возвращает длину строки, оканчивающейся нулевым символом, 
            //на которую указывает str.При определении длины строки нулевой символ не учитывается.
        {
            if (isdigit(str[i]))//Макрос isdigit() возвращает ненулевое значение, если аргумент ch является цифрой от 0 до 9, в противном случае возвращается 0.
            {
                result = atoi(str);//Функция atoi() конвертирует строку, на которую указывает параметр str, в величину типа int. 
                //Строка должна содержать корректную запись целого числа. В противном случае возвращается 0.
            }
            else
            {
                cout << "В этой строке не содержатся цифры!" << endl;
                return false;
            }
        }
        return *str;
    }
    char* NumberToString(int number)//функция  конвертирует  число  в  строку  и  возвращает указатель на эту строку.
    {
        string temp = to_string(number); //to_string Преобразует числовое значение в string

        char* intToString = new char[temp.length() + 1];
        strcpy(intToString, temp.c_str());// функция strcpy копирования содержимого одного массива с элементами string в другой переопределив их в char
        //для передачи этой строки в функцию, а функция работает только с char
        //c_str преобразовывает строку string в указатель на динамический массив символов char (или wchar_t).

        return intToString;
    }
    char* Uppercase(char* str1)//функция преобразует строку в верхний регистр.
    {
        for (int i = 0; i < strlen(str1); i++)
        {
            str1[i] = toupper(str1[i]);//Функция toupper() в C++ преобразует заданный символ в верхний регистр. Она определена в заголовочном файле cctype.
     
        }
        return str1;
    }
    char* Lowercase(char* str1)//функция преобразует строку в нижний регистр.
    {
        for (int i = 0; i < strlen(str1); i++)
        {
            str1[i] = tolower(str1[i]);//Функция tolower() возвращает соответствующий нижнему регистру эквивалент символа ch, 
            //если ch — это буква верхнего регистра. В противном случае ch возвращается неизмененным.
        }
        return str1;
    }
    char* mystrrev(char* str)//функция  реверсирует  строку  и  возвращает  указатель  на  новую строку.
    {
        reverse(str, str + strlen(str));//reverse() меняет порядок элементов контейнера в диапазоне [first,last) на противоположный.

        return str;
    }



    int main()
    {
        setlocale(LC_ALL, "ru");
        SetConsoleCP(1251);
        SetConsoleOutputCP(1251);

        cout << "\n **********************************************************************************" << endl;
        cout << " *                        Программа работы со строками                            *" << endl;
        cout << " *                     расширенная библиотека функций V1.1                        *" << endl;
        cout << " **********************************************************************************" << endl;

        string str1;
        cout << "Введите строку 1:" << "\n";
        getline(cin, str1); // метод, котор автоматом считает длину строки и кол - во символов
        cout << "\n";

        string str2;
        cout << "Введите строку 2:" << "\n";
        getline(cin, str2);//метод, котор автоматом считает длину строки и кол-во символов
        cout << "\n";

       //создаем динамические массивы из элементов  введенных строк
        char* ptrStr1Arr = new char[str1.length() + 1]; // +1 для нулевого байта
        strcpy(ptrStr1Arr, str1.c_str());// функция strcpy копирования содержимого одного массива с элементами string в другой переопределив их в char
        //для передачи этой строки в функцию, а функция работает только с char
        //c_str преобразовывает строку string в указатель на динамический массив символов char (или wchar_t).
        
        
        //создаем динамические массивы из элементов  введенных строк
        char* ptrStr2Arr = new char[str2.length() + 1]; // +1 для нулевого байта
        strcpy(ptrStr2Arr, str2.c_str());// функция strcpy копирования содержимого одного массива с элементами string в другой переопределив их в char
        //для передачи этой строки в функцию, а функция работает только с char
        //c_str преобразовывает строку string в указатель на динамический массив символов char (или wchar_t).
        

        /* Вариант 2 без создания динамических массивов
        char* ptrStr1Arr = (char*)str1.c_str();
        char* ptrStr2Arr = (char*)str2.c_str();
        */
        //------------------------------------------------------------------------

        cout << "Вывод на экран первой строки: ";

        for (int i = 0; i < str1.length(); i++) 
        { 
            cout << ptrStr1Arr[i]; 
        }

        cout << "\n";
        cout << "Вывод на экран второй строки: ";

        for (int i = 0; i < str2.length(); i++) 
        { 
            cout << ptrStr2Arr[i]; 
        }
        cout << "\n";

        for (int i = 0; i < 50; i++) //вывводит разделительную линию
        { 
            cout << "_"; 
        }

        //------------------------------------------------------------------------
        cout << "\n" << "\n";

        int stringComp = mystrcmp(ptrStr1Arr, ptrStr2Arr); // Результат сравнения строк записывается в переменную

        cout << "Результат сравнения строк: " << stringComp;

        cout << "\n";
        for (int i = 0; i < 50; i++) //вывводит разделительную линию
        { 
            cout << "_"; 
        }
        //------------------------------------------------------------------------
        cout << "\n\n";

        int convertStrToInt = StringToNumber(ptrStr1Arr); // Результат конвертирования строки в число записывается в переменную

        cout << "Конвертирование строки в число: " << convertStrToInt;

        cout << "\n";

        for (int i = 0; i < 50; i++) //вывводит разделительную линию
        { 
            cout << "_"; 
        }
        //------------------------------------------------------------------------
        cout << "\n\n";

        int number = 0;
        cout << "введите число для конвертации: " << "\n";
        cin >> number;

        string intToString = NumberToString(number); // Результат конвертирования числа в строку записывается в переменную

        cout << "Результат конвертирования из Int в String: " << intToString;

        cout << "\n";
        for (int i = 0; i < 50; i++) //вывводит разделительную линию
        { 
            cout << "_"; 
        }
        //------------------------------------------------------------------------
        cout << "\n\n";

        string toUpper = Uppercase(ptrStr1Arr); // Результат преобразования строки в верхний регист

        cout << "Результат преобразования строки в верхний регист: " << toUpper;

        cout << "\n";
        for (int i = 0; i < 50; i++) //вывводит разделительную линию
        { 
            cout << "_"; 
        }
        //------------------------------------------------------------------------
        cout << "\n\n";

        string toLower = Lowercase(ptrStr1Arr); // Результат преобразования строки в нижний регист


        cout << "Результат преобразования строки в нижний регист: " << toLower;

        cout << "\n";
        for (int i = 0; i < 50; i++) //вывводит разделительную линию
        { 
            cout << "_"; 
        }
        //------------------------------------------------------------------------
        cout << "\n\n";

        string rrev = mystrrev(ptrStr1Arr); // Результат реверса строки

        cout << "Результат реверса строки: " << rrev;

        cout << "\n";
        for (int i = 0; i < 50; i++) //вывводит разделительную линию
        { 
            cout << "_"; 
        }
        //------------------------------------------------------------------------
        cout << "\n\n";

        //delete[] ptrStr1Arr, ptrStr2Arr;

        system("pause");

        return 0;
    }

