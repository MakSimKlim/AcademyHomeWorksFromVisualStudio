// Задание #2
// 
// ДЗ №32 Климов (массивы и указатели2)
//
//Даны два массива: А[M]и B[N] (M и N вводятся 
//с клавиатуры).Необходимо создать третий массив минимально возможного размера, в котором нужно собрать
//элементы массивов A и B, которые не являются общими
//для них, без повторений.

#include <iostream>
#include <time.h>
#include <string>

using namespace std;

//описание чудо фунции поиска одинаковых элементов в массиве и их уничтожения 
//не меняя размерность массива.
int Determ(int* ar, int SIZE) 
{
    int k = SIZE;

    for (int i = 0; i <= k; i++) 
    {

        int prov = 0;
        for (int j = i + 1; j <= k; j++) 
        {
            if (*(ar + i) == *(ar + j) && prov == 0) 
            {
                prov = 1;
            }
            else if (prov == 1) 
            {
                *(ar + j - 1) = *(ar + j);
            }
            if (j == k && prov == 1) 
            {
                *(ar + j) = *(ar + j) + 1;
            }
        }

        if (prov == 1) 
        {
            k--;
            i--;
        }
    }
    return k;
}

int main()
{
    setlocale(LC_ALL, "Rus");
    srand(time(NULL));

    cout << "\n **********************************************************************" << endl;
    cout << " *           Программа действий с массивами через указатели V2.1      *" << endl;
    cout << " **********************************************************************" << endl;

                                           //создаем первый массив

    int num1;                              // размер массива
    cout << "Введите размер массива А: ";
    cin >> num1;                           // получение от пользователя размера массива

    cout << "Массив А: " << "\n";
    int* arr1 = new int[num1];             // Выделение памяти для массива
    for (int i = 0; i < num1; i++) 
    {
                                           // Заполнение массива и вывод значений его элементов
        arr1[i] = 1 + rand() % (10 - 1);
        cout << arr1[i] << " ";
    }
                                           //Создадим указатель на первый элементы 1-го массива
    int* par1 = &arr1[0];
    cout << "\n\n";

                                          //создаем второй массив
    int num2;                             // размер массива
    cout << "Введите размер массива В: ";
    cin >> num2;                          // получение от пользователя размера массива

    cout << "Массив В: " << "\n";
    int* arr2 = new int[num2];            // Выделение памяти для массива
    for (int i = 0; i < num2; i++) 
    {
                                          // Заполнение массива и вывод значений его элементов
        arr2[i] = 1 + rand() % (10 - 1);
        cout << arr2[i] << " ";
    }
                                         //Создадим указатель на первый элементы 2-го массива
    int* par2 = &arr2[0];
    cout << "\n\n";

    cout << "Массив С в котором: " << "\n";
    cout << "элементы массивов A и B, которые не являются общими для них " << "\n";

                                          //создаем третий массив
    int num3;                             // размер массива
    num3 = num1 + num2;

    int* arr3 = new int[num3];           // Выделение памяти для массива
                                         //создадим указатель на 1 элмент 3-го массива.
    int* par3 = &arr3[0];
                                         //обнулим k и создадим l. так надо.
    int k = 0;
    int l = 0;

    for (int i = 0; i < num2; i++)
    {
        for (int j = 0; j < num1; j++)
        {
            if (*(par2 + i) == *(par1 + j))
            {
                l++;
            }
        }

        if (l == 0) 
        {
            *(par3 + k) = *(par2 + i);
            k++;
        }

        l = 0;
    }
    for (int i = 0; i < num1; i++) 
    {
        for (int j = 0; j < num2; j++) 
        {
            if (*(par1 + i) == *(par2 + j)) 
            {
                l++;
            }
        }
        if (l == 0) 
        {
            *(par3 + k) = *(par1 + i);
            k++;
        }
        l = 0;
    }

    k--;

    //а вдруг у нас несколько одинаковых общих элементов.
    //ведь числа в массиве могут повторяться.
    //нужно провести поиск и детерминацию одинаковых цифр
    //в результирующем массиве. 

    k = Determ(par3, k);

    for (int i = 0; i <= k; i++) 
    {
        cout << *(par3 + i) << " ";
    }

    cout << "\n\n";

    return 0;
}