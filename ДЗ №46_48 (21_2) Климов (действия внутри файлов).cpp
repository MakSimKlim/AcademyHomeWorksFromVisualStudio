//Задание №1,2,3,4.
//
// ДЗ №46_48 (21_2) Климов (действия внутри файлов)
//
//
// + Задание 1. Дан текстовый файл. Удалить из него последнюю строку. Результат записать в другой файл.
// + Задание 2. Дан текстовый файл.Найти длину самой длинной строки.
// + Задание 3. Дан текстовый файл.Посчитать сколько раз в нем встречается заданное пользователем слово.
// + Задание 4. Дан текстовый файл.Найти и заменить в нем заданное слово.Что искать и на что заменять определяется пользователем.
//
//
// ===== мои личные примечания ===================================
// чтобы раюботать с файлом нужно:
// получить доступ - с помощью указателя
// открыть файл - несколько режимов открытия текстовых файлов:
// (r, w, a, r+, w+, a+, rb, wb, b, r+b, b+, w+b, wb+, a+b, ab+)
// модифицировать
// закрыть
// Ещё инфа по работе с файлами:
// https://metanit.com/cpp/tutorial/8.2.php


#include <iostream>
#include <Windows.h>       // для setconsole
#include <cstdio>          // библиотека работы с файлами
#include <fstream>         // эта библиотека лучше, чем cstdio
#include <string>
#include <sstream>
#include <string.h>
#include <stdio.h>         // для scanf, printf
#include <iomanip>
#include <cstring>


using namespace std;

int main()
{
	setlocale(LC_ALL, "Rus");
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	//==============  создание файла и запись в него текста ====================================================

	ofstream out;                              //библиотека ofstream класс out

	out.open("input.txt");                     //open - метод открытия файла класса out

	if (out.is_open())                         //is_open - метод класса out для проверки что файл открыт
	{
		//запись текста в файл
		out << R"( 
Я помню чудное мгновенье:
Передо мной явилась ты,
Как мимолётное виденье,
Как гений чистой красоты.)" << "\n";
		//вывод текста в командной строке
		cout << R"(Я помню чудное мгновенье:
Передо мной явилась ты,
Как мимолётное виденье,
Как гений чистой красоты.)" << "\n\n";

	}

	out.close();                                // закрыть файл вывода

	cout << "0). Запись данного текста в файл 'input.txt' выполнена успешно" << "\n\n";

	//============== удаление последней строки и запись рез-та в другой файл ====================================

	ifstream fin("input.txt");                 // поток для чтения
	ofstream fout("output.txt");               // поток для вывода
	string strStart;                           //начальная строка
	string strEnd;                             //конечная строка
	int k = 0;                                 //подсчет строк
	while (getline(fin, strStart))             //пока идет запись из файла input подсчитывается кол-во строк
	{
		k++;
	}
	fin.clear();                               // функция чистит состояние потока после while,сбрасывая все установленные флаги ошибки
	fin.seekg(0);                              // Вовращаем курсор к началу файла input 
	
	cout << "1) Текст без последней строки: " << "\n";

	for (int i = k - 1; i > 0; --i)           //запись в новый файл без последней строки
	{
		getline(fin, strEnd);                 //запись из файла input без последней строки
		fout << strEnd << "\n";
		cout << strEnd << "\n";
	}
	cout << "\n";
	cout << "Запись полученного текста в файл 'output.txt' выполнена успешно" << "\n\n";
	fin.close();
	fout.close();


	//============== определение и вывод на экран самой длинной строки ==========================================

	ifstream in("input.txt");                // поток для чтения

	string strCurrent, strMax;               // текущая строка, самая длинная строка

	while (getline(in, strCurrent))
	{
		if (strCurrent.size() > strMax.size())
			strMax = strCurrent;
	}

	cout << "2). Самая длинная строка: " << strMax.size() << " символов" << " - " << strMax << "\n";

	in.close();                              // закрыть файл вывода

	//============== посчитать количество определенных слов =======================================================

	char word[65], search[65];              // массивы букв (слова)
	int quantity = 0;                       // количество вхождений

	cout << "\n3) Подсчёт количества искомых слов (!Здесь регистрозависимость!): \n";
	cout << "Введите искомое слово: ";
	cin >> search;

	ifstream input("input.txt");            // поток для чтения

	if (input.fail())                       //проверка на ошибки
	{ 
		cout << "Ошибка !!!"; 
		return 1; 
	}

	while (!input.eof())                    //eof - выдаёт истину, если файл пуст, а если файл не пуст, то выдаётся ложь.
		                                    // пока файл не пуст, считываем из файла по одному символу и выводим на экран
	{
		input >> word;                      //Переопределение операторов ввода и вывода

		if (strstr(word, search))           //Функция strstr() возвращает указатель на первое вхождение в строку, 
			                                //на которую указывает str1, строки, указанной str2 (исключая завершающий нулевой символ).
			                                //Если совпадений не обна­ружено, возвращается NULL.
		{
			quantity++;                     //подсчет количества слов
		}
	}
	cout << "Количество вхождений данного слова в тексте: " << quantity << endl;
	input.close();                          // закрыть файл вывода

	//================== Поиск и замена заданного слова в файле =================================================

	cout << "\n4) Поиск и замена заданного слова в файле (!Здесь регистрозависимость!): \n";

	string file = "input.txt";

	ifstream f_in;
	f_in.open(file);                        //открываем файл input.txt
	if (!f_in.is_open())                    // проверка на ошибки
	{
		cout << "Ошибка. Файл не найден" << endl;
	}
	else
	{
		string word_source;                 //слово которОЕ будет изменено
		string word_dest;                   //слово которЫМ будет произведена замена

		cout << "Введите слово которОЕ будет изменено:" << "\n";
		cin >> word_source;
		
		cout << "Введите слово которЫМ будет произведена замена:" << "\n";
		cin >> word_dest;

		cout << "\n";

		string temp; int count = 0;
		temp = "";
		while (f_in)
		{
			string str;
			getline(f_in, str, '\n');       //извлекает данные из входного потока (файл input ) до строкового разделителя '\n', 
			                                //который не записывается в получившийся массив данных
			if (!f_in) break;

			//cout << str << endl;//заполнение строки значениями  из файла и вывод начального текста

			size_t position = 0;            //size_t - Это тип, способный представлять размер любого объекта в байтах

			while (position != string::npos)//npos — статическое константное значение члена с максимально возможным значением для элемента типа size_t 
			{
				size_t position_start = position;
				position = str.find(word_source, position);

				if (position != string::npos)//npos — статическое константное значение члена с максимально возможным значением для элемента типа size_t 
				{   
					count++;

					///------------------------
					/// Пишем до найденого.    
					///------------------------
					temp += str.substr(position_start,
						position - position_start);
					///------------------------
					/// Меняем слово.          
					///------------------------
					temp += word_dest;
					position += word_source.size();
				}
				else
				{
					temp += str.substr(position_start,
						position - position_start);
				}
			}
			temp += "\n";
		}
		f_in.close();                                  //закрываем исходный файл

		///------------------------
		/// Перезаписываем файл.   
		///------------------------
		ofstream f_out("output2.txt");
		f_out << temp.substr(0, temp.size());
		f_out.close();

		cout << "Вcего было заменено " << count << " слов(а).\n";
		cout << "\nТекст после изменения слов:\n" << temp << "\n";
	}




	system("pause");

	return 0;

}
