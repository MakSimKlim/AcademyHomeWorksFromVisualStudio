// ДЗ №67_68 Классы (срок 27.04.23) (Дробь)
// 
// 
//  Создать класс «Дробь» для представления простой дроби.
//  Поля:
//■ числитель,
//■ знаменатель.
//  Функции - члены :
//■ конструктор принимающий числитель и знаменатель.
//  В конструкторе использовать список инициализаторов полей класса.
//■ конструктор по умолчанию, реализовать через делегирование конструктору с параметрами числитель и знаменатель;
//■ вывод на экран дроби;
// 
// ==============================================================================================================================================
// ПОКА НЕ РЕАЛИЗОВАНО ВСЁ, ЧТО НИЖЕ ЭТОЙ НАДПИСИ
// 
//■ сложение / вычитание / умножение простой дроби с простой дробью;
//■ сложение / вычитание / умножение простой дроби с целым числом.
//  В арифметических операциях предусмотреть возможность вызова операций по цепочке используя указатель this.
//  Предусмотреть сокращение дроби. Сокращение рекомендуется производить в конструкторе.


#include <iostream>
#include <Windows.h>

using namespace std;

class Fraction                                               // класс Дробь
{
public:

    //Мы определили два конструктора для класса - один с тремя параметрами и другой без параметров. 
    //В конструкторе без параметров мы используем делегирование конструктору с параметрами, передавая значения по умолчанию (0, 0, 0) для соответствующих полей. 
    //В конструкторе с параметрами мы устанавливаем значения полей numerator, denominator, fraction в соответствии с переданными аргументами numerat, denominat, fract соответственно.

    Fraction() : Fraction(0, 1, 0) { }                       // конструктор по умолчанию (без параметров), реализованный через делегирование конструктору с параметрами числитель, знаменатель, дробь

    // конструктор (с параметрами) класса Дробь, принимающий числитель и знаменатель
    // В конструкторе использован список инициализаторов полей класса,
    // чтобы инициализировать поля numerator, denominator, fraction значениями numerat, denominat, fract соответственно. 
    Fraction(double numerat, double denominat, double fract) : numerator(numerat), denominator (denominat), fraction (fract) {  } // список инициализаторов полей класса
    

    void setFractionValue()                                  // сеттер - метод задания значений для дроби
    {
        cout << "Введите данные: \n\n";
        cout << "Числитель (целое число):"<<"\n";
        cin >> numerator;
        cout << "Знаменатель (Целое число, кроме '0'):"<<"\n";
        cin >> denominator;
        while (denominator == 0)                               // защита от случайного ввода в знаменатель значения "0"
        {
            cout << "Введено некорректное значение, введите число не равное 0:" << "\n";
            cin >> denominator;
        }
        cout << "\n";
    }

    void getFractionValue()                                  // геттер - метод получения значений для дроби
    {
        //system("cls");
        cout << "Числитель дроби равен:" << numerator << "\n";
        cout << "Знаменатель дроби равен:" << denominator << "\n";
    }

    void fractionValueCalculation()                         // метод вычисления дроби и вывод её на экран
    {
        fraction = numerator / denominator;
        cout << "Значение дроби, при введённых значениях числителя и знаменателя, равно: " << fraction << "\n";
        cout << "\n";

        //system("pause");
        
    }

    ~Fraction()                                             // деструктор 
    {}

private:
    double numerator;                                       // числитель дроби
    double denominator;                                     // знаменатель дроби
    double fraction;                                        // дробь
};

int main()
{
    setlocale(LC_ALL, "Rus");
    SetConsoleCP(1251);                                     // устанавливаем кодировку Windows-1251
    SetConsoleOutputCP(1251);
    SetConsoleTitle(TEXT("Дробь V2.0"));                    // Установка заголовка консольного окна

    cout << "******************************************************************************************" << "\n";
    cout << "*                                 Программа 'ДРОБЬ' V2.0                                 *" << "\n";
    cout << "******************************************************************************************" << "\n";

    Fraction Value1;                                        // инициализация объекта Value1 класса Fraction
    Value1.setFractionValue();                              // вызов метода setFractionValue класса Fraction для объекта Value1
    Value1.getFractionValue();                              // вызов метода getFractionValue класса Fraction для объекта Value1
    Value1.fractionValueCalculation();                      // вызов метода fractionValueCalculation класса Fraction для объекта Value1

    Fraction Value2;                                        // инициализация объекта Value2 класса Fraction
    Value2.setFractionValue();                              // вызов метода setFractionValue класса Fraction для объекта Value2
    Value2.getFractionValue();                              // вызов метода getFractionValue класса Fraction для объекта Value2
    Value2.fractionValueCalculation();                      // вызов метода fractionValueCalculation класса Fraction для объекта Value2

    

    return 0;
}

